I common.mc
L lmath.asm
# Some helpful macros	
#
#
@MOVE32AV 46368 VC32
@MOVE32AV 28657 VB32
#@MOVE32AV 0x6ff1 VC32
#@MOVE32AV 0x452f VB32
#@PRT "VB:" @PRT32I VB32 @PRT ", VC:" @PRT32I VC32 @PRTNL
@PUSH VB32 @PUSH VC32 @PUSH VB32 @CALL SUB32
@PRT32I VB32
@PUSH VC32 @PUSH VB32 @CALL CMP32
@PRT " " @PRTTOP
@MOVE32AV 1 VA32
@MOVE32AV 2 VB32
@MC2M 0 Index
:LOOP1
   @PUSH VA32 @PUSH VB32 @PUSH VC32 @CALL ADD32
   @PRTI Index @PRT ": A(" @PRT32I VA32 @PRT ") + B(" @PRT32I VB32 @PRT ") = "@PRT32I VC32
   @PUSH VB32 @PUSH VC32 @CALL CMP32 @PRT " VC(" @PRT32I VC32 @PRT ") cmp VB(" @PRT32I VB32 @PRT ") is " @PRTTOP
   @PRT " SUBval as" @PUSH VB32 @PUSH VC32 @PUSH Junk @CALL SUB32 @PRT32I Junk
   @PRTNL      
   @CMP -1 @POPNULL   
   @JMPZ EndLoop   
   @COPY32VV VB32 VA32
   @COPY32VV VC32 VB32
   @INCI Index
@JMP LOOP1
:EndLoop
@END
:VA32 0 0
:VB32 0 0
:VC32 0 0
:Junk 0 0
:Index 0






# Fixed 32b numbers
:Zero32 0 0
:One32 $$$1
:Two32 $$$2
:Ten32 $$$10
:N10032 $$$-100
#
# Work variables
:VA32 0 0
:VB32 0 0
:VC32 0 0
:VD32 0 0
:VE32 0 0
